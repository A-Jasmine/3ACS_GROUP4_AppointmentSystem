@page
@model WebBookingApp.Pages.StudentSettingsModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Settings</title>
    <link rel="stylesheet" href="~/css/dashboardStudent.css">
    <link rel="stylesheet" href="~/css/StudentSettings.css">
    <script src="https://kit.fontawesome.com/0cc051477a.js" crossorigin="anonymous"></script>
    <style>
        .readonly-field {
            background-color: #f5f5f5;
            cursor: not-allowed;
        }
    </style>
</head>
<body>
    <div class="sidebar">
        <div class="profile">
            <img id="profileImage"
                 src="/dashboardStudent?handler=ProfilePicture&t=@DateTime.Now.Ticks"
                 alt="Profile Picture"
                 onclick="openUploadModal()">
            <div class="profile-info">
                <h2>@Model.FirstName @Model.LastName</h2>
                @if (Model.Role == "Student" && !string.IsNullOrWhiteSpace(Model.StudentOrganizationName) &&
                !string.IsNullOrWhiteSpace(Model.StudentOrgRole) &&
                Model.StudentOrganizationName != "N/A" &&
                Model.StudentOrgRole != "N/A")
                {
                    <h3>@Model.StudentOrganizationName.ToUpper() @Model.StudentOrgRole</h3>
                }
                else
                {
                    <h3>@Model.Role</h3>
                }
            </div>
        </div>

        <ul>
            <p class="menu-text">Menu</p>
            <li><a asp-page="/dashboardStudent"><i class="fas fa-tachometer-alt"></i> Home</a></li>
            <li><a asp-page="/BookedAppointments"><i class="fas fa-calendar-check"></i> Booked Appointments</a></li>
            <li><a asp-page="/makeAppointment"><i class="fas fa-plus-circle"></i> Make Appointment</a></li>

            @if (Model.Role == "Alumni")
            {
                <li><a asp-page="/AlumniAppointments"><i class="fas fa-calendar-alt"></i> Manage Appointments</a></li>
                <li><a asp-page="/SetAvailabilityAlumni"><i class="fas fa-calendar-alt"></i> Set Availability</a></li>
            }
            else if (Model.Role == "StudentOrgMember" || (!string.IsNullOrEmpty(Model.StudentOrgRole) && Model.StudentOrgRole != "N/A"))
            {
                <li><a asp-page="/StudentOrgAppointments"><i class="fas fa-calendar-alt"></i> Manage Appointments</a></li>
                <li><a asp-page="/SetAvailabilityStudentOrg"><i class="fas fa-calendar-alt"></i> Set Availability</a></li>
            }

            <!-- Settings Menu Item -->
            @if (Model.Role == "Student" && string.IsNullOrEmpty(Model.StudentOrgRole))
            {
                <li><a asp-page="/StudentSettings"><i class="fas fa-cog"></i> Settings</a></li>
            }
            else if (Model.Role == "StudentOrgMember" || Model.Role == "StudentOrganizationMember" ||
            (!string.IsNullOrEmpty(Model.StudentOrgRole) && Model.StudentOrgRole != "N/A"))
            {
                <li><a asp-page="/OrgSettings"><i class="fas fa-cog"></i> Settings</a></li>
            }
        </ul>

        <a href="#" class="logout" onclick="showLogoutModal()">
            <i class="fas fa-sign-out-alt"></i> Log out
        </a>
    </div>

    <div class="main-content">
        <div class="settings-container">
            <h1>Settings</h1>

            <div class="profile-banner">
                @if (Model.ProfilePicture != null)
                {
                    <img src="@Url.Page("/dashboardStudent", "ProfilePicture")" alt="Profile Picture" />
                }
                else
                {
                    <img src="/images/image.png" alt="Default Profile" />
                }
                <div class="student-name">
                    <h2>@Model.FirstName @Model.LastName</h2>
                    @if (Model.Role == "Student" && !string.IsNullOrWhiteSpace(Model.StudentOrganizationName) &&
                    !string.IsNullOrWhiteSpace(Model.StudentOrgRole) &&
                    Model.StudentOrganizationName != "N/A" &&
                    Model.StudentOrgRole != "N/A")
                    {
                        <h3>@Model.StudentOrganizationName.ToUpper() @Model.StudentOrgRole</h3>
                    }
                    else
                    {
                        <h3>@Model.Role</h3>
                    }
                </div>
            </div>

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-success">@Model.Message</div>
            }

            <div class="settings-form">
                <form method="post" asp-page-handler="UpdateSettings">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-grid">
                        <!-- First Column -->
                        <div class="form-column">
                            <div class="form-group">
                                <label asp-for="StudentId"></label>
                                <input asp-for="StudentId" class="form-control readonly-field" readonly>
                            </div>

                            <div class="form-group">
                                <label asp-for="FirstName"></label>
                                <input asp-for="FirstName" class="form-control readonly-field" readonly>
                            </div>

                            <div class="form-group">
                                <label asp-for="MiddleName"></label>
                                <input asp-for="MiddleName" class="form-control readonly-field" readonly>
                            </div>

                            <div class="form-group">
                                <label asp-for="LastName"></label>
                                <input asp-for="LastName" class="form-control readonly-field" readonly>
                            </div>

                            <div class="form-group">
                                <label asp-for="Program"></label>
                                <input asp-for="Program" class="form-control readonly-field" readonly>
                            </div>
                        </div>

                        <!-- Second Column -->
                        <div class="form-column">
                            <div class="form-group">
                                <label asp-for="Email"></label>
                                <input asp-for="Email" class="form-control">
                                <span asp-validation-for="Email" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="MobileNumber"></label>
                                <input asp-for="MobileNumber" class="form-control">
                                <span asp-validation-for="MobileNumber" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="YearLevel"></label>
                                <select asp-for="YearLevel" class="form-control readonly-field" disabled>
                                    <option value="">Select Year Level</option>
                                    <option value="1st Year" selected="@(Model.YearLevel == "1st Year")">1st Year</option>
                                    <option value="2nd Year" selected="@(Model.YearLevel == "2nd Year")">2nd Year</option>
                                    <option value="3rd Year" selected="@(Model.YearLevel == "3rd Year")">3rd Year</option>
                                    <option value="4th Year" selected="@(Model.YearLevel == "4th Year")">4th Year</option>
                                </select>
                                <input type="hidden" asp-for="YearLevel" />
                            </div>

                            <div class="form-group">
                                <label asp-for="CurrentPassword"></label>
                                <input asp-for="CurrentPassword" class="form-control"
                                       placeholder="Required if changing password">
                                <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="NewPassword"></label>
                                <input asp-for="NewPassword" class="form-control"
                                       placeholder="Minimum 8 characters with uppercase, lowercase, number, and special character"
                                       onkeyup="checkPasswordStrength(this.value)">
                                <div id="password-strength-meter" style="height: 5px; margin-top: 5px;"></div>
                                <small id="password-strength-text" class="form-text"></small>
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="ConfirmPassword"></label>
                                <input asp-for="ConfirmPassword" class="form-control">
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="save-btn">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="uploadModal" class="modal">
        <div class="modal-content">
            <h2>Upload Profile Picture</h2>
            <form id="uploadForm" method="post" enctype="multipart/form-data" asp-page-handler="UploadPicture">
                <input type="file" name="UploadedFile" accept="image/*" required>
                <button type="submit">Upload</button>
            </form>
            @if (!string.IsNullOrEmpty(Model.Message) && ViewContext.HttpContext.Request.Path.Value.Contains("UploadPicture"))
            {
                <p class="text-danger">@Model.Message</p>
            }
        </div>
    </div>

    <div id="logoutModal" class="modal">
        <div class="modal-content">
            <h2>Logout Confirmation</h2>
            <p>Are you sure you want to log out?</p>
            <div class="modal-buttons">
                <button class="logout-btn" onclick="confirmLogout()">Yes</button>
                <button class="cancel-btn" onclick="hideLogoutModal()">Cancel</button>
            </div>
        </div>
    </div>

    <form id="logoutForm" method="post" asp-page-handler="Logout"></form>

    <script src="~/js/dashboardStudent.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/zxcvbn/4.4.2/zxcvbn.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

    <script>
        function checkPasswordStrength(password) {
            const meter = document.getElementById('password-strength-meter');
            const text = document.getElementById('password-strength-text');

            if (!password) {
                meter.style.width = '0%';
                meter.style.backgroundColor = 'transparent';
                text.textContent = '';
                return;
            }

            const result = zxcvbn(password);
            const strength = result.score;

            switch(strength) {
                case 0:
                    meter.style.width = '20%';
                    meter.style.backgroundColor = '#dc3545';
                    text.textContent = 'Very Weak';
                    text.style.color = '#dc3545';
                    break;
                case 1:
                    meter.style.width = '40%';
                    meter.style.backgroundColor = '#fd7e14';
                    text.textContent = 'Weak';
                    text.style.color = '#fd7e14';
                    break;
                case 2:
                    meter.style.width = '60%';
                    meter.style.backgroundColor = '#ffc107';
                    text.textContent = 'Moderate';
                    text.style.color = '#ffc107';
                    break;
                case 3:
                    meter.style.width = '80%';
                    meter.style.backgroundColor = '#28a745';
                    text.textContent = 'Strong';
                    text.style.color = '#28a745';
                    break;
                case 4:
                    meter.style.width = '100%';
                    meter.style.backgroundColor = '#28a745';
                    text.textContent = 'Very Strong';
                    text.style.color = '#28a745';
                    break;
            }
        }

        document.querySelector('form').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('NewPassword')?.value;
            const confirmPassword = document.getElementById('ConfirmPassword')?.value;
            const currentPassword = document.getElementById('CurrentPassword')?.value;

            // Only validate passwords if new password is provided
            if (newPassword) {
                if (!currentPassword) {
                    e.preventDefault();
                    alert('Please enter your current password to change your password.');
                    return;
                }

                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    alert('New password and confirmation password do not match!');
                }
            }
        });
    </script>
</body>
</html>
