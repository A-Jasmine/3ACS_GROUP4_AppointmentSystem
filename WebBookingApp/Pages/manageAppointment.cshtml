@page
@model WebBookingApp.Pages.manageAppointmentModel
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Appointment</title>
    <link rel="stylesheet" href="~/css/manageAppointment.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://kit.fontawesome.com/0cc051477a.js" crossorigin="anonymous"></script>
</head>
<body>

    <div class="sidebar">
        <div class="profile">
            <img id="profileImage"
                 src="/dashboardStudent?handler=ProfilePicture&t=@DateTime.Now.Ticks"
                 alt="Profile Picture"
                 onclick="openUploadModal()">
            <div class="profile-info">
                <h2>@Model.FirstName @Model.LastName</h2>
                <h3>@Model.Role</h3>
            </div>
        </div>

        <ul>
            <p class="menu-text">Menu</p>
            <li><a asp-page="/dashboardProfessor"><i class="fas fa-tachometer-alt"></i> Home</a></li>
            <li><a asp-page="/manageAppointment"><i class="fas fa-calendar-alt"></i> Manage Appointments</a></li>
            <li><a asp-page="/setAvailability"><i class="fas fa-clock"></i> Set Availability</a></li>
            <li><a asp-page="/InstructorSettings"><i class="fas fa-cog"></i> Settings</a></li>
        </ul>

        <a href="#" class="logout" onclick="showLogoutModal()">
            <i class="fas fa-sign-out-alt"></i> Log out
        </a>
    </div>

    <div class="main-content">
        <h1>YOUR APPOINTMENTS</h1>

        <div class="filter-container">
            <form method="get" class="status-filter">
                <label for="statusFilter">Filter by:</label>
                <select id="statusFilter" name="statusFilter" onchange="this.form.submit()">
                    <option value="All" selected="@(Model.StatusFilter == "All")">All Appointments</option>
                    <option value="Pending" selected="@(Model.StatusFilter == "Pending")">Pending</option>
                    <option value="Approved" selected="@(Model.StatusFilter == "Approved")">Approved</option>
                    <option value="Completed" selected="@(Model.StatusFilter == "Completed")">Completed</option>
                    <option value="Declined" selected="@(Model.StatusFilter == "Declined")">Declined</option>
                    <option value="Cancelled" selected="@(Model.StatusFilter == "Cancelled")">Cancelled</option>
                </select>
            </form>
        </div>

        @if (Model.PendingAppointments.Any())
        {
            <div class="table-responsive">
                <table class="appointments-table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Date</th>
                            <th>Time</th>
                            <th>Purpose</th>
                            <th>Mode</th>
                            <th>Notes</th>
                            <th>Status</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var appt in Model.PendingAppointments)
                        {
                            <tr>
                                <td class="booker-cell">
                                    <img src="@appt.BookerProfilePicture" alt="Booker" class="booker-avatar" />
                                    <span>@appt.BookerName</span>
                                </td>
                                <td nowrap>@appt.AppointmentDate.ToString("MMM dd, yyyy")</td>
                                <td nowrap>@appt.FormattedAppointmentTime</td>
                                <td>@appt.Purpose</td>
                                <td>@appt.Mode</td>
                                <td class="notes-cell">@appt.AdditionalNotes</td>
                                <td>
                                    <span class="status-badge status-@appt.Status.ToLower()">@appt.Status</span>
                                </td>
                                <td>
                                    @if (appt.Status == "Pending")
                                    {
                                        <textarea name="approvalRemark" id="approvalRemark_@appt.Id"
                                                  class="approval-remark" placeholder="Enter remarks (optional)">@appt.ApprovalRemarks</textarea>
                                    }
                                   
                                </td>

                                <td class="actions-cell">
                                    <form method="post" id="form-@appt.Id" onsubmit="return handleAppointmentAction(this, '@appt.Status.ToLower()', @appt.Id)">
                                        <input type="hidden" name="id" value="@appt.Id" />
                                        <input type="hidden" name="remarks" />
                                        <div class="action-buttons">
                                            @if (appt.Status == "Pending")
                                            {
                                                <button type="submit" asp-page-handler="Approve" class="btn-approve">
                                                    <i class="fas fa-check"></i> Approve
                                                </button>
                                                <button type="submit" asp-page-handler="Decline" class="btn-decline">
                                                    <i class="fas fa-times"></i> Decline
                                                </button>
                                            }
                                            else if (appt.Status == "Approved")
                                            {
                                                <button type="submit" asp-page-handler="Complete" class="btn-complete">
                                                    <i class="fas fa-check-circle"></i> Complete
                                                </button>
                                                <button type="submit" asp-page-handler="Cancel" class="btn-cancel">
                                                    <i class="fas fa-ban"></i> Cancel
                                                </button>
                                            }
                                        </div>
                                    </form>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="no-appointments">
                <p>No appointments at this time.</p>
            </div>
        }
    </div>

    <div id="uploadModal" class="modal">
        <div class="modal-content">
            <h2>Upload Profile Picture</h2>
            <form id="uploadForm" method="post" enctype="multipart/form-data" asp-page-handler="UploadPicture">
                <input type="file" name="UploadedFile" accept="image/*" required>
                <button type="submit">Upload</button>
            </form>
            <p id="uploadMessage"></p>
        </div>
    </div>

    <div id="logoutModal" class="modal">
        <div class="modal-content">
            <h2>Logout Confirmation</h2>
            <p>Are you sure you want to log out?</p>
            <div class="modal-buttons">
                <button class="logout-btn" onclick="confirmLogout()">Yes</button>
                <button class="cancel-btn" onclick="hideLogoutModal()">Cancel</button>
            </div>
        </div>
    </div>


    <form id="logoutForm" method="post" asp-page-handler="Logout"></form>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/dashboardAdmin.js"></script>

    <script>
        // Store the current appointment being cancelled
        let currentCancellationId = null;
        let currentCancellationForm = null;

        // Modified handleAppointmentAction to handle modal for cancellations
        function handleAppointmentAction(form, currentStatus, appointmentId) {
            const remarksField = document.getElementById(`approvalRemark_${appointmentId}`);
            if (remarksField) {
                const hiddenRemarks = form.querySelector('input[name="remarks"]');
                if (hiddenRemarks) {
                    hiddenRemarks.value = remarksField.value;
                }
            }

            // Check if this is a cancellation action
            const action = form.querySelector('button[type="submit"][asp-page-handler]:focus')?.getAttribute('asp-page-handler');

            if (action === 'Cancel') {
                currentCancellationId = appointmentId;
                currentCancellationForm = form;

                // Show modal instead of submitting immediately
                const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
                modal.show();

                return false; // Prevent form submission
            }

            if (currentStatus === 'pending' && action === 'Decline') {
                return confirm('Are you sure you want to decline this appointment?');
            }

            return true;
        }

        // Handle modal confirmation
        document.getElementById('confirmCancel').addEventListener('click', function() {
            const reason = document.getElementById('cancelReason').value;

            // Set the reason in the hidden remarks field
            const hiddenRemarks = currentCancellationForm.querySelector('input[name="remarks"]');
            if (hiddenRemarks) {
                hiddenRemarks.value = reason;
            }

            // Submit the form
            currentCancellationForm.submit();

            // Hide modal
            const modal = bootstrap.Modal.getInstance(document.getElementById('cancelModal'));
            modal.hide();
        });

        // Reset modal when closed
        document.getElementById('cancelModal').addEventListener('hidden.bs.modal', function() {
            document.getElementById('cancelReason').value = '';
            currentCancellationId = null;
            currentCancellationForm = null;
        });

        // Rest of your existing JavaScript...
        function showAlertFromUrl() {
            const urlParams = new URLSearchParams(window.location.search);
            const action = urlParams.get('action');
            const success = urlParams.get('success');

            if (action && success) {
                let message = '';
                let alertType = success === 'true' ? 'success' : 'danger';

                switch(action) {
                    case 'approve':
                        message = success === 'true'
                            ? 'Appointment approved successfully!'
                            : 'Failed to approve appointment.';
                        break;
                    case 'decline':
                        message = success === 'true'
                            ? 'Appointment declined successfully!'
                            : 'Failed to decline appointment.';
                        break;
                    case 'complete':
                        message = success === 'true'
                            ? 'Appointment completed successfully!'
                            : 'Failed to complete appointment.';
                        break;
                    case 'cancel':
                        message = success === 'true'
                            ? 'Appointment cancelled successfully!'
                            : 'Failed to cancel appointment.';
                        break;
                    default:
                        return;
                }

                showAlert(message, alertType);
            }
        }

        function showAlert(message, type) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.role = 'alert';
            alertDiv.style.position = 'fixed';
            alertDiv.style.top = '20px';
            alertDiv.style.right = '20px';
            alertDiv.style.zIndex = '1000';
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;

            document.body.appendChild(alertDiv);

            setTimeout(() => {
                alertDiv.classList.remove('show');
                setTimeout(() => alertDiv.remove(), 150);
            }, 5000);
        }

        document.addEventListener('DOMContentLoaded', showAlertFromUrl);
    </script>
</body>
</html>